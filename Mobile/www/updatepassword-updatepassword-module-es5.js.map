{"version":3,"sources":["webpack:///src/app/updatepassword/updatepassword.page.html","webpack:///src/app/updatepassword/updatepassword-routing.module.ts","webpack:///src/app/updatepassword/updatepassword.module.ts","webpack:///src/app/updatepassword/updatepassword.page.scss","webpack:///src/app/updatepassword/updatepassword.page.ts"],"names":["routes","path","component","UpdatepasswordPageRoutingModule","imports","forChild","exports","UpdatepasswordPageModule","declarations","UpdatepasswordPage","navCtrl","Router","loadingCtrl","alertCtrl","ApiserviceService","storage","Updatepassword","id_user","email","password","password2","password3","create","mode","Loading","present","get","then","data","dismiss","UpdatePasswordProcess","Output","JSON","parse","stringify","clear","set","val","condition","presentAlert","message","navigate","Msg","buttons","Alert","selector","template"],"mappings":"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","file":"updatepassword-updatepassword-module-es5.js","sourcesContent":["export default \"<ion-header>\\n    <ion-toolbar>\\n        <ion-buttons slot=\\\"start\\\">\\n            <ion-back-button color=\\\"vendorposlog\\\" text=\\\"\\\" icon=\\\"close-circle-outline\\\" defaultHref=\\\"/profile\\\"></ion-back-button>\\n        </ion-buttons>\\n        <ion-title class=\\\"header-title\\\">Change password</ion-title>\\n    </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n    <ion-row>\\n\\t\\t<ion-col size=\\\"12\\\">\\n\\t\\t\\t<ion-item>\\n\\t\\t\\t\\t<ion-label style=\\\"color: black;\\\" position=\\\"floating\\\">Password *</ion-label>\\n\\t\\t\\t\\t<ion-input type=\\\"password\\\" [(ngModel)]=\\\"Updatepassword.password3\\\"></ion-input>\\n\\t\\t\\t</ion-item>\\n        </ion-col>\\n        <ion-col size=\\\"12\\\">\\n\\t\\t\\t<ion-item>\\n\\t\\t\\t\\t<ion-label style=\\\"color: black;\\\" position=\\\"floating\\\">Retry Password *</ion-label>\\n\\t\\t\\t\\t<ion-input type=\\\"password\\\" [(ngModel)]=\\\"Updatepassword.password2\\\"></ion-input>\\n\\t\\t\\t</ion-item>\\n\\t\\t</ion-col>\\n\\t\\t<ion-col size=\\\"12\\\">\\n\\t\\t\\t<p style=\\\"font-size: 12px; padding-left: 10px; font-style: italic;\\\">Note : * Column cannot be null</p>\\n\\t\\t</ion-col>\\n\\t\\t<ion-col size=\\\"12\\\">\\n\\t\\t\\t<ion-button expand=\\\"block\\\" mode=\\\"ios\\\" color=\\\"vendorposlog\\\" (click)=\\\"UpdatePasswordProcess()\\\">Update Now</ion-button>\\n\\t\\t</ion-col>\\n\\t</ion-row>\\n</ion-content>\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { UpdatepasswordPage } from './updatepassword.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: UpdatepasswordPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class UpdatepasswordPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { UpdatepasswordPageRoutingModule } from './updatepassword-routing.module';\n\nimport { UpdatepasswordPage } from './updatepassword.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    UpdatepasswordPageRoutingModule\n  ],\n  declarations: [UpdatepasswordPage]\n})\nexport class UpdatepasswordPageModule {}\n","export default \".header-title {\\n  font-size: 18px;\\n  color: #ff8a35;\\n}\\n\\n.ion-color-vendorposlog {\\n  --ion-color-base: var(--ion-color-vendorposlog);\\n  --ion-color-base-rgb: var(--ion-color-vendorposlog-rgb);\\n  --ion-color-contrast: var(--ion-color-vendorposlog-contrast);\\n  --ion-color-contrast-rgb: var(--ion-color-vendorposlog-contrast-rgb);\\n  --ion-color-shade: var(--ion-color-vendorposlog-shade);\\n  --ion-color-tint: var(--ion-color-vendorposlog-tint);\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdXBkYXRlcGFzc3dvcmQvdXBkYXRlcGFzc3dvcmQucGFnZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksZUFBQTtFQUNBLGNBQUE7QUFDSjs7QUFDQTtFQUNDLCtDQUFBO0VBQ0EsdURBQUE7RUFDQSw0REFBQTtFQUNBLG9FQUFBO0VBQ0Esc0RBQUE7RUFDQSxvREFBQTtBQUVEIiwiZmlsZSI6InNyYy9hcHAvdXBkYXRlcGFzc3dvcmQvdXBkYXRlcGFzc3dvcmQucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmhlYWRlci10aXRsZXtcbiAgICBmb250LXNpemU6IDE4cHg7XG4gICAgY29sb3I6ICNmZjhhMzU7XG59XG4uaW9uLWNvbG9yLXZlbmRvcnBvc2xvZyB7XG5cdC0taW9uLWNvbG9yLWJhc2U6IHZhcigtLWlvbi1jb2xvci12ZW5kb3Jwb3Nsb2cpO1xuXHQtLWlvbi1jb2xvci1iYXNlLXJnYjogdmFyKC0taW9uLWNvbG9yLXZlbmRvcnBvc2xvZy1yZ2IpO1xuXHQtLWlvbi1jb2xvci1jb250cmFzdDogdmFyKC0taW9uLWNvbG9yLXZlbmRvcnBvc2xvZy1jb250cmFzdCk7XG5cdC0taW9uLWNvbG9yLWNvbnRyYXN0LXJnYjogdmFyKC0taW9uLWNvbG9yLXZlbmRvcnBvc2xvZy1jb250cmFzdC1yZ2IpO1xuXHQtLWlvbi1jb2xvci1zaGFkZTogdmFyKC0taW9uLWNvbG9yLXZlbmRvcnBvc2xvZy1zaGFkZSk7XG5cdC0taW9uLWNvbG9yLXRpbnQ6IHZhcigtLWlvbi1jb2xvci12ZW5kb3Jwb3Nsb2ctdGludCk7XG59Il19 */\";","import { Component, OnInit } from '@angular/core';\nimport { ToastController, NavController, LoadingController, AlertController, Platform, IonRouterOutlet} from '@ionic/angular';\nimport { ActivatedRoute, Router, NavigationExtras, RouteReuseStrategy} from '@angular/router';\nimport { Storage } from '@ionic/storage';\nimport { ApiserviceService } from '../apiservice/apiservice.service';\n\n@Component({\n  selector: 'app-updatepassword',\n  templateUrl: './updatepassword.page.html',\n  styleUrls: ['./updatepassword.page.scss'],\n})\nexport class UpdatepasswordPage implements OnInit {\n\n  Updatepassword: any = {id_user: '', email: '', password: '', password2: '', password3: ''};\n  constructor(\n    public navCtrl: NavController,\n    public Router: Router,\n    public loadingCtrl: LoadingController,\n    public alertCtrl: AlertController,\n    private ApiserviceService: ApiserviceService,\n    private storage: Storage\n  ) { }\n\n  async ngOnInit() {\n    let Loading = await this.alertCtrl.create({\n      mode: 'ios'\n    });\n    Loading.present();\n    this.storage.get('storage_poslogvendor').then((data) => {\n      this.Updatepassword.id_user = data.data.id_user;\n      this.Updatepassword.email = data.data.email;\n      this.Updatepassword.password = data.data.password;\n    });\n    Loading.dismiss();\n  }\n\n  async UpdatePasswordProcess() {\n    let Loading = await this.loadingCtrl.create({\n      mode: 'ios'\n    });\n    Loading.present();\n    if(this.Updatepassword.password3 != '' && this.Updatepassword.password2 != '') {\n      if(this.Updatepassword.password3 == this.Updatepassword.password2) {\n        this.ApiserviceService.UpdatePasswordProcess(this.Updatepassword).then(data => {\n          let Output = JSON.parse(JSON.stringify(data));\n          this.storage.clear();\n          this.storage.set('storage_poslogvendor', Output).then(val => {\n            Loading.dismiss();\n            if(Output.condition == true) {\n              this.presentAlert(Output.message);\n              this.Router.navigate(['profile']);\n            }else{\n              this.presentAlert(Output.message);\n            }\n          });\n        })\n      }else{\n        Loading.dismiss();\n        this.presentAlert('Password not macth');\n      }\n    }else{\n      Loading.dismiss();\n      this.presentAlert('Column cannot be null');\n    }\n  }\n\n  async presentAlert(Msg) {\n    let Alert = await this.alertCtrl.create({\n      mode: 'ios',\n      message: Msg,\n      buttons: ['OK']\n    })\n    Alert.present();\n  }\n\n}\n"]}